html {
	font-size: 62.5%;
}

/* mobile first css */
body {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 1.6rem;
    background-color: #192f5e;
}

.flex-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}
/* Step one: style the default/generic/mobie view - style my links to set their look while visible */
header {
	background-color: #fff;
	padding: 2%;
}

header a {
    color: #3f3f3f;
    text-decoration: none;
    display: block; /*This allows the clickable area to take up the full space of the li*/

}

.menu a:hover,
.menu a:active {
    background-color: gainsboro;
    border-radius: 4px;
}

.toggle-btn {
    border: none;
    background-color: #fff;
    outline: none; /* strips away the dots on it if using a toggle menu 
    focus set on the outline provides visual feedback for keyboard navigation */
}

.toggle-btn:hover {
    cursor: pointer; /* to help people understand that this is a piece of navigation */
}

svg rect {
    fill: #3f3f3f; /* We use fill to change the color of an svg */
}

.menu li {
    line-height: 4rem; /* Lets the content set the leight of the container */
    text-align: center; 
    }
/* style to overlap the content below "main-content. This container does not have a relativley positioned parent container. 
This container will be positioned absolutely to the body in mobile view.*/
header nav {
    position: absolute;
    top:6.6rem;
    left: 0;
    /* Once absolute it will not inherit its bg color from its old parent. Put the bg color back */
    background-color: #ffffff;
    width: 100vw; /* (100% of the viewport width) */
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.7s ease-in-out;
}

ul.menu {
    padding-bottom: 1rem;
}

/* Is the extra class that we call from the JS and is toggled by the method classList*/
.show-nav {
    max-height: 30rem;
}

/* ************************* section ****************** */
section {
    padding: 3.125rem;
    text-align: center;
    text-transform: uppercase;
}

section p {
    color: #d5e294;
    border-bottom: 2px solid #d5e294;
    padding-bottom: 10px;
    margin-bottom: 10px;
    font-size: 1.777rem;
}

section h2,
footer {
    color: #fff;
    font-size: 3.157rem;
    margin-bottom: 2rem;
}

/*--- Footer --- */
footer {
	text-align: center;
	position: -webkit-sticky;
	position: sticky;
}


@media only screen and (min-width: 520px) {
       
    /*  Hide the toggle button in the tablet and desktop views. There is enough room on the screen to see the navigation now.*/
        .toggle-btn {
            display: none;
        }

        /* Max height indicates that it can be less than 30rem byt can not be larger */
        header nav {
            max-height: 30rem;
            position: static; /* Reset from absolute back to the default static */
            max-width: 60%; /* Reset - Previously was set to 100VW */
            overflow: visible; /* Reset from hidden */
        }

        .menu,
        header {
            display: flex;
            justify-content: space-between;
        }

        .menu li {
        
            flex-grow: 1;/* The flex-grow property specifies how much the item will grow relative
        to the rest of the flexible items inside the same container.*/
            flex-shrink: 0; /*Required to use flex-basis
            The flex-shrink property specifies how the item will shrink relative
            to the rest of the flexible items inside the same container.*/
            flex-basis: auto; /* The flex-basis property specifies the initial length of a flexible item. */
        }
    }

@media only screen and (min-width: 1300px) {
        
        /* Constrains the viewport on larger screens by center aligning the content where
        users like to see it in the middle. */
        header {
            width: 1300px;
            margin: 0 auto;
        }
    }